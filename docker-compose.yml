services:
  pg:
    image: postgres:15-alpine3.19
    container_name: pg
    environment:
      - "POSTGRES_DB=${PG_DBNAME}"
      - "POSTGRES_USER=${PG_USER}"
      - "POSTGRES_PASSWORD=${PG_PWD}"
    ports:
      - "5432:5432"
    volumes:
      - pg:/var/lib/postgresql/data
    networks:
      - shared

  kafka:
    image: apache/kafka:3.8.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9094:9094"
    networks:
      - shared
    volumes:
      - kfk:/var/lib/kafka/data
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kui
    ports:
      - "8085:8080"
    networks:
      - shared
    environment:
      DYNAMIC_CONFIG_ENABLED: true

  migrator:
    container_name: auth-migrator
    depends_on:
      - pg
    image: "ghcr.io/neracastle/auth-migrations:sha-${TAG_NAME}"
    build:
      context: .
      dockerfile: migrations/Dockerfile
    restart: on-failure
    environment:
      - "PG_HOST=pg"
      - "PG_PORT=5432"
      - "PG_USER=${PG_USER}"
      - "PG_PWD=${PG_PWD}"
      - "PG_DBNAME=${PG_DBNAME}"
    networks:
      - shared
    links:
      - pg

  auth-service:
    depends_on:
      pg:
        condition: service_started
      migrator:
        condition: service_completed_successfully
    image: "ghcr.io/neracastle/auth-service:sha-${TAG_NAME}"
    build:
      context: .
    container_name: auth-service
    environment:
      - "ENV=local"
      - "GRPC_PORT=${GRPC_PORT}"
      - "PG_HOST=pg"
      - "PG_PORT=5432"
      - "PG_USER=${PG_USER}"
      - "PG_PWD=${PG_PWD}"
      - "PG_DBNAME=${PG_DBNAME}"
    ports:
      - "${GRPC_PORT}:${GRPC_PORT}"
    restart: no
    networks:
      - shared
    links:
      - pg

  prometheus:
    image: prom/prometheus:v2.53.2
    container_name: prometheus
    networks:
      - shared
    ports:
      - "9090:9090"
    volumes:
      - metrics:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana-oss:10.4.7
    container_name: grafana
    networks:
      - shared
    ports:
      - "3000:3000"
    volumes:
      - grafana:/var/lib/grafana

  jaeger:
    image: jaegertracing/all-in-one:1.60
    container_name: jaeger
    networks:
      - shared
    ports:
      - 6831:6831
      - 5778:5778
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 14250:14250
      - 14268:14268
      - 14269:14269

volumes:
  pg:
    driver: local
  kfk:
    driver: local
  metrics:
    driver: local
  grafana:
    driver: local
  tempo:
    driver: local

networks:
  shared:
    name: service-net